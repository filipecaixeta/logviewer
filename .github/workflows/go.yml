name: Go Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.x'

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.arch }} go build -ldflags "-s -w" -o logviewer-${{ matrix.os }}-${{ matrix.arch }} cmd/main.go
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: logviewer-${{ matrix.os }}-${{ matrix.arch }}
        path: logviewer-${{ matrix.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/logviewer-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: logviewer-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream
